plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'java'
    id 'checkstyle'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"

group = 'com.esoftsystem'
version = '1.0.0'
sourceCompatibility = 11
targetCompatibility = 11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repos.esoftsystems.com:8081/artifactory/libs-release-local" }
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveClassifier = ''
}

def checkstyleConfigDir = new File(buildscript.sourceFile.parentFile, '')

checkstyle {
    toolVersion = "7.6.1"
    configFile = new File(checkstyleConfigDir, "checkstyle_checks.xml")
    configProperties.checkstyleConfigDir = checkstyleConfigDir
    configProperties.severity = 'error'
    sourceSets = [project.sourceSets.main]
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: 'src/main/java', exclude: ['**/*Test*', '**/*IT*'])
        }))
    }
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/jacocoHtml")
    }
}

test {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    }
    afterTest { desc, result ->
        println "Executed test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

bootRun {
    dependsOn checkstyleMain
}
